{"cells":[{"metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","trusted":true},"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","execution_count":1,"outputs":[{"output_type":"stream","text":"/kaggle/input/multilingual-disaster-response-messages/disaster_response_messages_test.csv\n/kaggle/input/multilingual-disaster-response-messages/disaster_response_messages_training.csv\n/kaggle/input/multilingual-disaster-response-messages/disaster_response_messages_validation.csv\n","name":"stdout"}]},{"metadata":{},"cell_type":"markdown","source":"## - Libraries and tensorflow model"},{"metadata":{"trusted":true},"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport os\nimport pickle\nimport re\nimport nltk\nfrom sklearn.base import BaseEstimator, TransformerMixin\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.multioutput import MultiOutputClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier,AdaBoostClassifier\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\nfrom nltk.tokenize import word_tokenize\nfrom nltk.stem import WordNetLemmatizer\nfrom sklearn.pipeline import Pipeline, FeatureUnion\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import make_scorer, accuracy_score, f1_score, fbeta_score, classification_report\nfrom scipy.stats import hmean\nfrom scipy.stats.mstats import gmean\nimport xgboost as xgb\nfrom xgboost import XGBClassifier\n\nnltk.download(['punkt', 'wordnet', 'averaged_perceptron_tagger'])","execution_count":2,"outputs":[{"output_type":"stream","text":"[nltk_data] Downloading package punkt to /usr/share/nltk_data...\n[nltk_data]   Package punkt is already up-to-date!\n[nltk_data] Downloading package wordnet to /usr/share/nltk_data...\n[nltk_data]   Package wordnet is already up-to-date!\n[nltk_data] Downloading package averaged_perceptron_tagger to\n[nltk_data]     /usr/share/nltk_data...\n[nltk_data]   Package averaged_perceptron_tagger is already up-to-\n[nltk_data]       date!\n","name":"stdout"},{"output_type":"execute_result","execution_count":2,"data":{"text/plain":"True"},"metadata":{}}]},{"metadata":{},"cell_type":"markdown","source":"## Data"},{"metadata":{"trusted":true},"cell_type":"code","source":"train_path = \"../input/multilingual-disaster-response-messages/disaster_response_messages_training.csv\"\ntest_path = \"../input/multilingual-disaster-response-messages/disaster_response_messages_test.csv\"\nval_path = \"../input/multilingual-disaster-response-messages/disaster_response_messages_validation.csv\"","execution_count":3,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"","execution_count":null,"outputs":[]},{"metadata":{"_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","trusted":true},"cell_type":"code","source":"d_train = pd.read_csv(train_path)\nd_test = pd.read_csv(test_path)\nd_val = pd.read_csv(val_path)","execution_count":4,"outputs":[{"output_type":"stream","text":"/opt/conda/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3063: DtypeWarning: Columns (3) have mixed types.Specify dtype option on import or set low_memory=False.\n  interactivity=interactivity, compiler=compiler, result=result)\n","name":"stderr"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"target_cols = d_train.columns[5:]","execution_count":5,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"for i in target_cols:\n    print(i)\n    print(d_train[i].value_counts())","execution_count":6,"outputs":[{"output_type":"stream","text":"related\n1    15795\n0     5083\n2      168\nName: related, dtype: int64\nPII\n0    21046\nName: PII, dtype: int64\nrequest\n0    17486\n1     3560\nName: request, dtype: int64\noffer\n0    21046\nName: offer, dtype: int64\naid_related\n0    12361\n1     8685\nName: aid_related, dtype: int64\nmedical_help\n0    19392\n1     1654\nName: medical_help, dtype: int64\nmedical_products\n0    19975\n1     1071\nName: medical_products, dtype: int64\nsearch_and_rescue\n0    20426\n1      620\nName: search_and_rescue, dtype: int64\nsecurity\n0    20644\n1      402\nName: security, dtype: int64\nmilitary\n0    20382\n1      664\nName: military, dtype: int64\nchild_alone\n0    21046\nName: child_alone, dtype: int64\nwater\n0    19725\n1     1321\nName: water, dtype: int64\nfood\n0    18717\n1     2329\nName: food, dtype: int64\nshelter\n0    19168\n1     1878\nName: shelter, dtype: int64\nclothing\n0    20723\n1      323\nName: clothing, dtype: int64\nmoney\n0    20559\n1      487\nName: money, dtype: int64\nmissing_people\n0    20794\n1      252\nName: missing_people, dtype: int64\nrefugees\n0    20328\n1      718\nName: refugees, dtype: int64\ndeath\n0    20082\n1      964\nName: death, dtype: int64\nother_aid\n0    18170\n1     2876\nName: other_aid, dtype: int64\ninfrastructure_related\n0    19608\n1     1438\nName: infrastructure_related, dtype: int64\ntransport\n0    20098\n1      948\nName: transport, dtype: int64\nbuildings\n0    19952\n1     1094\nName: buildings, dtype: int64\nelectricity\n0    20597\n1      449\nName: electricity, dtype: int64\ntools\n0    20906\n1      140\nName: tools, dtype: int64\nhospitals\n0    20818\n1      228\nName: hospitals, dtype: int64\nshops\n0    20947\n1       99\nName: shops, dtype: int64\naid_centers\n0    20788\n1      258\nName: aid_centers, dtype: int64\nother_infrastructure\n0    20058\n1      988\nName: other_infrastructure, dtype: int64\nweather_related\n0    15181\n1     5865\nName: weather_related, dtype: int64\nfloods\n0    19349\n1     1697\nName: floods, dtype: int64\nstorm\n0    19073\n1     1973\nName: storm, dtype: int64\nfire\n0    20807\n1      239\nName: fire, dtype: int64\nearthquake\n0    19067\n1     1979\nName: earthquake, dtype: int64\ncold\n0    20621\n1      425\nName: cold, dtype: int64\nother_weather\n0    19908\n1     1138\nName: other_weather, dtype: int64\ndirect_report\n0    17037\n1     4009\nName: direct_report, dtype: int64\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def get_results(y_test, y_pred):\n    results = pd.DataFrame(columns=['Category', 'f_score', 'precision', 'recall'])\n    num = 0\n    for cat in y_test.columns:\n        precision, recall, f_score, support = precision_recall_fscore_support(y_test[cat], y_pred[:,num], average='weighted')\n        results.set_value(num+1, 'Category', cat)\n        results.set_value(num+1, 'f_score', f_score)\n        results.set_value(num+1, 'precision', precision)\n        results.set_value(num+1, 'recall', recall)\n        num += 1\n    print('Aggregated f_score:', results['f_score'].mean())\n    print('Aggregated precision:', results['precision'].mean())\n    print('Aggregated recall:', results['recall'].mean())\n    return results","execution_count":7,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"class StartingVerbExtractor(BaseEstimator, TransformerMixin):\n\n    def starting_verb(self, text):\n        sentence_list = nltk.sent_tokenize(text)\n        for sentence in sentence_list:\n            pos_tags = nltk.pos_tag(tokenize(sentence))\n            first_word, first_tag = pos_tags[0]\n            if first_tag in ['VB', 'VBP'] or first_word == 'RT':\n                return True\n        return False\n\n    def fit(self, X, y=None):\n        return self\n\n    def transform(self, X):\n        X_tagged = pd.Series(X).apply(self.starting_verb)\n        return pd.DataFrame(X_tagged)\ndef multioutput_fscore(y_true,y_pred,beta=1):\n    score_list = []\n    if isinstance(y_pred, pd.DataFrame) == True:\n        y_pred = y_pred.values\n    if isinstance(y_true, pd.DataFrame) == True:\n        y_true = y_true.values\n    for column in range(0,y_true.shape[1]):\n        score = fbeta_score(y_true[:,column],y_pred[:,column],beta,average='weighted')\n        score_list.append(score)\n    f1score_numpy = np.asarray(score_list)\n    f1score_numpy = f1score_numpy[f1score_numpy<1]\n    f1score = gmean(f1score_numpy)\n    return  f1score","execution_count":8,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"def tokenize(text):\n    url_regex = 'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+'\n    detected_urls = re.findall(url_regex, text)\n    for url in detected_urls:\n        text = text.replace(url, \"urlplaceholder\")\n\n    tokens = word_tokenize(text)\n    lemmatizer = WordNetLemmatizer()\n\n    clean_tokens = []\n    for tok in tokens:\n        clean_tok = lemmatizer.lemmatize(tok).lower().strip()\n        clean_tokens.append(clean_tok)\n\n    return clean_tokens","execution_count":9,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"def model_pipeline():\n    pipeline = Pipeline([\n        ('features', FeatureUnion([\n\n            ('text_pipeline', Pipeline([\n                ('vect', CountVectorizer(tokenizer=tokenize)),\n                ('tfidf', TfidfTransformer())\n            ])),\n\n            ('starting_verb', StartingVerbExtractor())\n        ])),\n\n        ('clf', MultiOutputClassifier(XGBClassifier(tree_method='gpu_hist',predictor='gpu_predictor',n_estimators=100, max_depth=5,\n                                                    objective='multi:softmax',num_class=37,verbose=True)))\n    ])\n\n    return pipeline","execution_count":10,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"X_train = d_train['message']\nY_train = d_train.iloc[:,5:]\nX_test = d_test['message']\nY_test = d_test.iloc[:,5:]","execution_count":11,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"model = []\nmodel = model_pipeline()\nmodel.fit(X_train, Y_train)","execution_count":12,"outputs":[{"output_type":"stream","text":"[07:27:02] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:27:50] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:28:25] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:29:31] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:30:07] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:31:18] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:32:19] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:33:19] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:34:18] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:35:13] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:36:12] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:36:48] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:37:48] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:38:49] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:39:52] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:40:47] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:41:46] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:42:41] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:43:39] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:44:37] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:45:43] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:46:44] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:47:44] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:48:44] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:49:42] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:50:35] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n","name":"stdout"},{"output_type":"stream","text":"[07:51:30] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:52:24] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:53:20] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:54:20] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:55:27] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:56:26] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:57:27] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:58:21] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[07:59:19] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[08:00:15] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n[08:01:15] WARNING: ../src/learner.cc:516: \nParameters: { verbose } might not be used.\n\n  This may not be accurate due to some parameters are only used in language bindings but\n  passed down to XGBoost core.  Or some parameters are not used but slip through this\n  verification. Please open an issue if you find above cases.\n\n\n","name":"stdout"},{"output_type":"execute_result","execution_count":12,"data":{"text/plain":"Pipeline(steps=[('features',\n                 FeatureUnion(transformer_list=[('text_pipeline',\n                                                 Pipeline(steps=[('vect',\n                                                                  CountVectorizer(tokenizer=<function tokenize at 0x7fea19341710>)),\n                                                                 ('tfidf',\n                                                                  TfidfTransformer())])),\n                                                ('starting_verb',\n                                                 StartingVerbExtractor())])),\n                ('clf',\n                 MultiOutputClassifier(estimator=XGBClassifier(base_score=None,\n                                                               booster=None,\n                                                               colsample_bylevel=None,\n                                                               colsa...\n                                                               max_depth=5,\n                                                               min_child_weight=None,\n                                                               missing=nan,\n                                                               monotone_constraints=None,\n                                                               n_estimators=100,\n                                                               n_jobs=None,\n                                                               num_class=37,\n                                                               num_parallel_tree=None,\n                                                               objective='multi:softmax',\n                                                               predictor='gpu_predictor',\n                                                               random_state=None,\n                                                               reg_alpha=None,\n                                                               reg_lambda=None,\n                                                               scale_pos_weight=None,\n                                                               subsample=None,\n                                                               tree_method='gpu_hist',\n                                                               validate_parameters=None,\n                                                               verbose=True,\n                                                               verbosity=None)))])"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"pickle.dump(model, open(\"classifier_new.pkl\", 'wb'))","execution_count":14,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"y_pred = model.predict(X_test)","execution_count":15,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"msg = ['Hello I see fire in the street and many houses are destroyed, homeless people everywhere']\ntest_output = model.predict(msg)\nprint(Y_train.columns.values[(test_output.flatten()==1)])","execution_count":17,"outputs":[{"output_type":"stream","text":"['related' 'aid_related' 'shelter' 'infrastructure_related' 'buildings'\n 'weather_related' 'fire' 'direct_report']\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"y_pred = model.predict(X_test)","execution_count":18,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"\nmulti_f1 = multioutput_fscore(Y_test,y_pred, beta = 1)\noverall_accuracy = (y_pred == Y_test).mean().mean()\n\nprint('Average overall accuracy {0:.2f}% \\n'.format(overall_accuracy*100))\nprint('F1 score (custom definition) {0:.2f}%\\n'.format(multi_f1*100))","execution_count":19,"outputs":[{"output_type":"stream","text":"Average overall accuracy 95.94% \n\nF1 score (custom definition) 95.19%\n\n","name":"stdout"},{"output_type":"stream","text":"/opt/conda/lib/python3.7/site-packages/sklearn/utils/validation.py:70: FutureWarning: Pass beta=1 as keyword args. From version 0.25 passing these as positional arguments will result in an error\n  FutureWarning)\n","name":"stderr"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"from sklearn.metrics import precision_recall_fscore_support\ndef get_results(y_test, y_pred):\n    results = pd.DataFrame(columns=['Category', 'f_score', 'precision', 'recall'])\n    num = 0\n    for cat in y_test.columns:\n        precision, recall, f_score, support = precision_recall_fscore_support(y_test[cat], y_pred[:,num], average='weighted')\n        results.at[num+1, 'Category']= cat\n        results.at[num+1, 'f_score']= f_score\n        results.at[num+1, 'precision']= precision\n        results.at[num+1, 'recall']= recall\n        num += 1\n    print('Aggregated f_score:', results['f_score'].mean())\n    print('Aggregated precision:', results['precision'].mean())\n    print('Aggregated recall:', results['recall'].mean())\n    return results","execution_count":20,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"get_results(Y_test, y_pred)","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.7.6","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat":4,"nbformat_minor":4}